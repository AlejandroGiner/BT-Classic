
#Effect to create estate advisor. NOTE: Does not do the influence modifier - you'll have to do that yourself.
#$ADVISORTYPE$: Advisor type to use
#$ESTATE$: Estate to check influence for
#$EVENTTARGET$: Event target string used for a random province granted to the $ESTATE$
create_estate_advisor_effect = {
	hidden_effect = {
		random_owned_province = {
			limit = {
				has_estate = $ESTATE$
			}
			save_event_target_as = $EVENTTARGET$
		}
	}
	trigger_switch = {
		on_trigger = monthly_income
		25 = {
			if = {
				limit = { has_saved_event_target = $EVENTTARGET$ }
				if = {
					limit = {
						estate_influence = {
							estate = $ESTATE$
							influence = 80
						}
					}
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 3
						culture = event_target:$EVENTTARGET$
						religion = event_target:$EVENTTARGET$
						location = event_target:$EVENTTARGET$
						cost_multiplier = 0.5
					}
				}
				else_if = {
					limit = {
						estate_influence = {
							estate = $ESTATE$
							influence = 60
						}
					}
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 3
						culture = event_target:$EVENTTARGET$
						religion = event_target:$EVENTTARGET$
						location = event_target:$EVENTTARGET$
						cost_multiplier = 0.75
					}
				}
				else = {
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 3
						culture = event_target:$EVENTTARGET$
						religion = event_target:$EVENTTARGET$
						location = event_target:$EVENTTARGET$
					}
				}
			}
			else = {
				if = {
					limit = {
						estate_influence = {
							estate = $ESTATE$
							influence = 80
						}
					}
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 3
						cost_multiplier = 0.5
					}
				}
				else_if = {
					limit = {
						estate_influence = {
							estate = $ESTATE$
							influence = 60
						}
					}
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 3
						cost_multiplier = 0.75
					}
				}
				else = {
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 3
					}
				}
			}
		}
		0 = {
			if = {
				limit = { has_saved_event_target = $EVENTTARGET$ }
				if = {
					limit = {
						estate_influence = {
							estate = $ESTATE$
							influence = 80
						}
					}
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 2
						culture = event_target:$EVENTTARGET$
						religion = event_target:$EVENTTARGET$
						location = event_target:$EVENTTARGET$
						cost_multiplier = 0.5
					}
				}
				else_if = {
					limit = {
						estate_influence = {
							estate = $ESTATE$
							influence = 60
						}
					}
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 2
						culture = event_target:$EVENTTARGET$
						religion = event_target:$EVENTTARGET$
						location = event_target:$EVENTTARGET$
						cost_multiplier = 0.75
					}
				}
				else = {
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 2
						culture = event_target:$EVENTTARGET$
						religion = event_target:$EVENTTARGET$
						location = event_target:$EVENTTARGET$
					}
				}
			}
			else = {
				if = {
					limit = {
						estate_influence = {
							estate = $ESTATE$
							influence = 80
						}
					}
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 2
						cost_multiplier = 0.5
					}
				}
				else_if = {
					limit = {
						estate_influence = {
							estate = $ESTATE$
							influence = 60
						}
					}
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 2
						cost_multiplier = 0.75
					}
				}
				else = {
					define_advisor = {
						type = $ADVISORTYPE$
						skill = 2
					}
				}
			}
		}
	}
}

add_or_spawn_center_of_trade = {
	if = { #If has center of trade, add level.
		limit = { province_has_center_of_trade_of_level = 1 }
		add_center_of_trade_level = $LEVEL$
	}
	else = {
		center_of_trade = $LEVEL$
	}
}

create_interregnum_effect = {
	hidden_effect = {
		every_country = {
			limit = {
				marriage_with = ROOT
			}
			break_marriage = ROOT
		}
		kill_heir = yes
	}
	define_ruler = {
		name = "(Interregnum)"
		adm = 0
		dip = 0
		mil = 0
		fixed = yes
		regency = yes
	}
}
